package txai

import "errors"

var Errors = map[int]error{
	-2147483635: errors.New("系统繁忙，请稍后再试"),
	-1:          errors.New("请求错误"),
	9: errors.New("qps超过限制	用户认证升级或者降低调用频率"),
	4096:  errors.New("参数非法，请检查请求参数是否符合要求"),
	12289: errors.New("应用不存在，请检查app_id是否有效的应用标识（AppId）"),
	12801: errors.New("素材不存在，请检查app_id对应的素材模版id"),
	12802: errors.New("素材ID与应用ID不匹配，请检查app_id对应的素材模版id"),
	16385: errors.New("缺少app_id参数，请检查请求中是否包含有效的app_id参数"),
	16386: errors.New("缺少time_stamp参数，请检查请求中是否包含有效的time_stamp参数"),
	16387: errors.New("缺少nonce_str参数，请检查请求中是否包含有效的nonce_str参数"),
	16388: errors.New("请求签名无效，请检查请求中的签名信息（sign）是否有效"),
	16389: errors.New("缺失API权限，请检查应用是否勾选当前API所属接口的权限"),
	16390: errors.New("time_stamp参数无效，请检查time_stamp距离当前时间是否超过5分钟"),
	16391: errors.New("同义词识别结果为空，系统识别结果为空"),
	16392: errors.New("专有名词识别结果为空，系统识别结果为空"),
	16393: errors.New("意图识别结果为空，系统识别结果为空"),
	16394: errors.New("闲聊返回结果为空，系统处理结果为空"),
	16396: errors.New("图片格式非法，请检查图片格式是否符合API要求"),
	16397: errors.New("图片体积过大，请检查图片大小是否超过API限制"),
	16402: errors.New("图片没有人脸，请检查图片是否包含人脸"),
	16403: errors.New("相似度错误，请联系客服反馈问题"),
	16404: errors.New("人脸检测失败，请联系客服反馈问题"),
	16405: errors.New("图片解码失败，请联系客服反馈问题"),
	16406: errors.New("特征处理失败，请联系客服反馈问题"),
	16407: errors.New("提取轮廓错误，请联系客服反馈问题"),
	16408: errors.New("提取性别错误，请联系客服反馈问题"),
	16409: errors.New("提取表情错误，请联系客服反馈问题"),
	16410: errors.New("提取年龄错误，请联系客服反馈问题"),
	16411: errors.New("提取姿态错误，请联系客服反馈问题"),
	16412: errors.New("提取眼镜错误，请联系客服反馈问题"),
	16413: errors.New("提取魅力值错误，请联系客服反馈问题"),
	16414: errors.New("语音合成失败，请联系客服反馈问题"),
	16415: errors.New("图片为空，请检查图片是否正常"),
	16416: errors.New("个体已存在，请检查个体是否已存在"),
	16417: errors.New("个体不存在，请检查个体是否不存在"),
	16418: errors.New("人脸不存在，请检查人脸是否不存在"),
	16419: errors.New("分组不存在，请检查分组是否不存在"),
	16420: errors.New("分组列表不存在，请检查分组列表是否不存在"),
	16421: errors.New("人脸个数超过限制，请检查是否超过系统限制"),
	16422: errors.New("个体个数超过限制，请检查是否超过系统限制"),
	16423: errors.New("组个数超过限制，请检查是否超过系统限制"),
	16424: errors.New("对个体添加了几乎相同的人脸，请检查个体已添加的人脸"),
	16425: errors.New("无效的图片格式，请检查图片格式是否符号API要求"),
	16426: errors.New("图片模糊度检测失败，请联系客服反馈问题"),
	16427: errors.New("美食图片检测失败，请联系客服反馈问题"),
	16428: errors.New("提取图像指纹失败，请联系客服反馈问题"),
	16429: errors.New("图像特征比对失败，请联系客服反馈问题"),
	16430: errors.New("OCR照片为空，请检查待处理图片是否为空"),
	16431: errors.New("OCR识别失败，请联系客服反馈问题"),
	16432: errors.New("输入图片不是身份证，请检查图片是否为身份证"),
	16433: errors.New("名片无足够文本，请检查名片是否正常"),
	16434: errors.New("名片文本行倾斜角度太大，请检查名片是否正常"),
	16435: errors.New("名片模糊，请检查名片是否正常"),
	16436: errors.New("名片姓名识别失败，请联系客服反馈问题"),
	16437: errors.New("名片电话识别失败，请联系客服反馈问题"),
	16438: errors.New("图像为非名片图像，请检查图片是否为名片"),
	16439: errors.New("检测或者识别失败，请联系客服反馈问题"),
	16440: errors.New("未检测到身份证，请对准边框(避免拍摄时倾角和旋转角过大、摄像头)"),
	16441: errors.New("请使用第二代身份证件进行扫描，请使用第二代身份证进行处理"),
	16442: errors.New("不是身份证正面照片，请使用带证件照的一面进行处理"),
	16443: errors.New("不是身份证反面照片，请使用身份证反面进行进行处理"),
	16444: errors.New("证件图片模糊，请确保证件图片清晰"),
	16445: errors.New("请避开灯光直射在证件表面，请避开灯光直射在证件表面"),
	16446: errors.New("行驾驶证OCR识别失败，请联系客服反馈问题"),
	16447: errors.New("通用OCR识别失败，请联系客服反馈问题"),
	16448: errors.New("银行卡OCR预处理错误，请联系客服反馈问题"),
	16449: errors.New("银行卡OCR识别失败，请联系客服反馈问题"),
	16450: errors.New("营业执照OCR预处理失败，请联系客服反馈问题"),
	16451: errors.New("营业执照OCR识别失败，请联系客服反馈问题"),
	16452: errors.New("意图识别超时，请联系客服反馈问题"),
	16453: errors.New("闲聊处理超时，请联系客服反馈问题"),
	16454: errors.New("语音识别解码失败，请检查语音参数是否正确编码"),
	16455: errors.New("语音过长或空，请检查语音参数是否正确编码或者长度是否合法"),
	16456: errors.New("翻译引擎失败，请联系客服反馈问题"),
	16457: errors.New("不支持的翻译类型，请检查翻译类型参数是否合法"),
	16460: errors.New("输入图片与识别场景不匹配，请检查场景参数是否正确，所传图片与场景是否匹配"),
	16461: errors.New("识别结果为空，当前图片无法匹配已收录的标签，请尝试更换图片"),
	16462: errors.New("多人脸检测识别结果为空	图片中识别不出人脸，请尝试更换图片"),
	16467: errors.New("跨年龄人脸识别出错	请尝试更换有人脸的图片"),
	16468: errors.New("跨年龄人脸识别结果为空	源图片与目标图片中识别不出匹配的人脸，请尝试更换图片"),
	16472: errors.New("音频鉴黄识别出错	请确保音频地址能正常下载音频，尝试更换音频"),
}

// GetError 根据错代码获取错误
func GetError(ret int) error {
	if err, ok := Errors[ret]; ok == true {
		return err
	}
	return nil
}
